{"data":{"mdx":{"id":"422e57a5-c472-5c56-a633-cf2416a996b1","excerpt":"Programming Sorting in Japanese  is  hard There are four Japanese women whose names you have to sort: Junko, Atsuko, Kiyoko, and Akiko. This…","frontmatter":{"title":"Post for 2019-04-19","postedAt":"April 14, 2019"},"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nconst frontmatter = {\n  title: \"Post for 2019-04-19\",\n  draft: false,\n  postedAt: \"2019-04-14T16:39:43.005Z\"\n};\nconst layoutProps = {};\nreturn class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = null;\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      components\n    } = _this$props,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n    return React.createElement(MDXTag, {\n      name: \"wrapper\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Programming`), React.createElement(MDXTag, {\n      name: \"ul\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"p\",\n      components: components,\n      parentName: \"li\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"http://www.localizingjapan.com/blog/2011/02/13/sorting-in-japanese-%E2%80%94-an-unsolved-problem/\"\n      }\n    }, `Sorting in Japanese`), ` is `, React.createElement(MDXTag, {\n      name: \"strong\",\n      components: components,\n      parentName: \"p\"\n    }, `hard`)), React.createElement(MDXTag, {\n      name: \"blockquote\",\n      components: components,\n      parentName: \"li\"\n    }, React.createElement(MDXTag, {\n      name: \"p\",\n      components: components,\n      parentName: \"blockquote\"\n    }, `There are four Japanese women whose names you have to sort: Junko, Atsuko, Kiyoko, and Akiko. This does not seem difficult, until they each show you how they write their names in kanji:`), React.createElement(MDXTag, {\n      name: \"ul\",\n      components: components,\n      parentName: \"blockquote\"\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `淳子 (Junko)`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `淳子 (Atsuko)`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `淳子 (Kiyoko)`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `淳子 (Akiko)`))))), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Articles`), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Music`), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Art`), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Games`), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Books`));\n  }\n\n}"}}},"pageContext":{"slug":"/posts/2019-04-14/","previousPost":{"id":"c1fe8c2e-b827-5a21-b07d-60a938a7aa4b","fields":{"slug":"/posts/2019-04-09/"},"frontmatter":{"title":"Can't unsee these insecure Wordpress plugins"},"code":{"scope":""}},"nextPost":null}}