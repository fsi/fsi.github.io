{"version":3,"sources":["webpack:///./src/components/PostsList.jsx","webpack:///./src/pages/posts.js","webpack:///./src/config/colors.js","webpack:///./src/components/Header/Header.jsx","webpack:///./src/components/Layout.js","webpack:///./src/components/SEO.jsx","webpack:///./node_modules/core-js/modules/_string-html.js","webpack:///./node_modules/core-js/modules/es6.string.link.js","webpack:///./node_modules/core-js/modules/es6.string.small.js","webpack:///./src/components/Post/Post.jsx","webpack:///./src/components/Post/index.js"],"names":["PostsList","react_default","a","createElement","gatsby_browser_entry","query","render","data","Fragment","allMdx","edges","map","_ref","node","Post","key","id","link","fields","slug","title","frontmatter","date","postedAt","excerpt","_1946404668","RSSAside","styled","aside","withConfig","displayName","componentId","PostsPage","Layout","SEO","description","href","PostsList_PostsList","colors","brand","fade","background","backgroundAlt","bodyText","headerText","Wrapper","header","PartialNavLink","props","Object","assign","getProps","isPartiallyCurrent","className","LinkContainer","span","Header","to","activeClassName","Header_PartialNavLink","children","location","Header_Header","_755544856","propTypes","PropTypes","isRequired","_ref$lang","lang","_ref$meta","meta","_ref$keywords","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","seoQuery","_ref2","siteMetadata","site","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","defaultTitle","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_4122388860_json__WEBPACK_IMPORTED_MODULE_0__","$export","__webpack_require__","fails","defined","quot","createHTML","string","tag","attribute","value","S","String","p1","replace","module","exports","NAME","exec","O","P","F","test","toLowerCase","split","url","this","PostHeader","h3","PostHeaderDate","small","d","__webpack_exports__","Post_Post"],"mappings":"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","file":"component---src-pages-posts-js-96994cebb785abb94a80.js","sourcesContent":["import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport { Post } from '../components/Post'\n\nconst postsQuery = graphql`\n  query {\n    allMdx(sort: {fields: [frontmatter___postedAt], order: DESC}, filter: {frontmatter: {draft: {ne: true}}}) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            postedAt(formatString: \"MMMM DD, YYYY\")\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n\nexport const PostsList = () => {\n  return (\n    <StaticQuery\n      query={postsQuery}\n      render={(data) => (\n        <>\n          {data.allMdx.edges.map(({ node }) => (\n            <Post\n              key={node.id}\n              link={node.fields.slug}\n              title={node.frontmatter.title}\n              date={node.frontmatter.postedAt}\n              excerpt={node.excerpt}\n            />\n          ))}\n        </>\n      )}\n    />\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport Layout from '../components/Layout'\nimport { PostsList } from '../components/PostsList'\nimport { SEO } from '../components/SEO'\n\nconst RSSAside = styled.aside`\n  float: right;\n`\nconst PostsPage = () => (\n  <Layout>\n    <SEO title='Posts archive' description='fsis.site posts archive' />\n    <RSSAside><a href='/feed.xml'>RSS feed</a></RSSAside>\n    <h1>Posts archive</h1>\n    <PostsList />\n  </Layout>\n)\n\nexport default PostsPage\n","export const colors = {\n  brand: '#da5f51',\n  fade: '#848586',\n  background: '#eee0cb',\n  backgroundAlt: '#baa898',\n  bodyText: '#280003',\n  headerText: '#da5f51'\n}\n\nexport default colors\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'gatsby'\nimport { colors } from '../../config/colors'\n\nconst Wrapper = styled.header`\n  max-width: 720px;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  padding: 0 1rem;\n`\nconst PartialNavLink = props => (\n  <Link\n    getProps={({ isPartiallyCurrent }) => {\n      return isPartiallyCurrent ? { className: 'active' } : null\n    }}\n    {...props}\n  />\n)\nconst LinkContainer = styled.span`\n  display: inline-block;\n  font-size: 1rem;\n  margin: 1rem 1rem 1rem 0;\n  & .active {\n    font-weight: bold;\n    color: ${colors.brand}\n  }\n`\n\nexport const Header = (props) => {\n  return (\n    <Wrapper>\n      <nav>\n        <LinkContainer>\n          <Link to='/' activeClassName='active'>/home/fsi</Link>\n        </LinkContainer>\n        <LinkContainer>\n          <PartialNavLink to='/posts' activeClassName='active'>~/posts</PartialNavLink>\n        </LinkContainer>\n        <LinkContainer>\n          <strike><a href='/cv.en.html'>~/hire</a></strike>\n        </LinkContainer>\n      </nav>\n    </Wrapper>\n  )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Header } from './Header'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport './layout.css'\n\nexport const Layout = ({ children, location }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header />\n        <main>\n          {children}\n        </main>\n        <footer>\n          &copy; <a href='https://github.com/fsi'>FSi</a> 2019\n        </footer>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired\n}\n\nexport default Layout\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { graphql, StaticQuery } from 'gatsby'\n\nexport const SEO = ({ description, lang = 'en', meta = [], keywords = [], title }) => {\n  return (\n    <StaticQuery\n      query={seoQuery}\n      render={({ site: { siteMetadata } }) => (\n        <Helmet\n          htmlAttributes={{ lang }}\n          title={title}\n          defaultTitle={siteMetadata.title}\n          titleTemplate={`%s | ${siteMetadata.title}`}\n          meta={[\n            {\n              name: 'description',\n              content: description || siteMetadata.description\n            },\n            {\n              property: 'og:title',\n              content: title\n            },\n            {\n              property: 'og:description',\n              content: description || siteMetadata.description\n            },\n            {\n              property: 'og:type',\n              content: 'website'\n            },\n            {\n              name: 'twitter:card',\n              content: 'summary'\n            },\n            {\n              name: 'twitter:creator',\n              content: siteMetadata.author\n            },\n            {\n              name: 'twitter.title',\n              content: title\n            },\n            {\n              name: 'twitter.description',\n              content: description || siteMetadata.description\n            }\n          ]\n            .concat(keywords.length > 0 ? { name: 'keywords', content: keywords.join(', ') } : [])\n            .concat(meta)\n          }\n        />\n      )}\n    />\n  )\n}\n\nconst seoQuery = graphql`\n  query SeoQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n        social {\n          twitter\n        }\n      }\n    }\n  }\n`\n","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n","'use strict';\n// B.2.3.11 String.prototype.small()\nrequire('./_string-html')('small', function (createHTML) {\n  return function small() {\n    return createHTML(this, 'small', '', '');\n  };\n});\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\n\nconst PostHeader = styled.h3`\n  display: block;\n  align-items: flex-start;\n`\nconst PostHeaderDate = styled.small`\n  font-size: 0.5em;\n  margin-left: 1em;\n  opacity: 0.5;\n  &:before {\n    content: '[';\n  }\n  &:after {\n    content: ']';\n  }\n`\n\nexport const Post = ({ title, link, excerpt, date }) => {\n  return (\n    <article>\n      <PostHeader>\n        <Link to={link}>{title || 'Untitled post'}</Link>\n        <PostHeaderDate>{date}</PostHeaderDate>\n      </PostHeader>\n      <p>{excerpt}</p>\n    </article>\n  )\n}\n","export { Post } from './Post'\n"],"sourceRoot":""}